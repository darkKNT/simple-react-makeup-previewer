class App extends React.Component {
  constructor(props) {
    super(props)
   this.state = {
    text:'# A header (H1 size),\n## A sub header (H2 size), \n [a link](www.example.com),\n `inline code`,\n\n       a code block, \n\n - a list item, \n\n> a blockquote, \n\n ![an image](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg), \n\n **and bolded text**'
   };
    this.handleChange = this.handleChange.bind(this);
  }
 

handleChange(event) {
    this.setState({
      text: event.target.value
    });
}
 
  render() {
   return (
   <div className="vh-auto  container-fluid d-flex flex-column bg-primary align-items-center">
       <h1>Markdown Previewer</h1>
       <div className=" rounded d-flex flex-column
 mt-3 mb-3 w-50  border border-danger p-0">
         
         <div className="rounded border border-info">
           <i class="fas fa-fire">
             
           </i>Editor<i className="fas fa-expand-arrows-alt"></i>
             
           </div>
         
         <textarea className="rounded overflow-scroll w-100 align-self-stretch mb-0" id="editor" value={this.state.text} onChange={this.handleChange} />
         
         
       </div>
       
       <div className="vh-auto rounded d-flex flex-column mt-1 w-75 border border-info" >
         
       <div className=" border border-info">
         <i class="fas fa-fire"></i>
         Previewer
          <i className=" fas fa-expand-arrows-alt  justify-self-end"></i>
           
         </div>
         
         <div className="bg-light w-100 overflow-scroll" id="preview" dangerouslySetInnerHTML={{ __html:marked(this.state.text,{breaks:true})}}></div>
       </div>
     </div>
   );
    
  }  
}


ReactDOM.render(<App />,document.getElementById('app'));
